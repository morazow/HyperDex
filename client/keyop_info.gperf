struct hyperclient_keyop_info;
%struct-type
%language=ANSI-C
%define hash-function-name _hyperclient_keyop_info_hash
%define lookup-function-name _hyperclient_keyop_info_lookup
%includes
%readonly-tables
%pic
%define string-pool-name hyperclient_keyop_info_string_pool
%{
#include "datatypes/coercion.h"
#include "client/keyop_info.h"
#pragma GCC diagnostic ignored "-Wmissing-field-initializers"
%}
%%
put,                    false,  false,  true,   hyperdex::FUNC_SET,             container_implicit_coercion
put_if_not_exist,       false,  true,   true,   hyperdex::FUNC_SET,             container_implicit_coercion
cond_put,               true,   false,  true,   hyperdex::FUNC_SET,             container_implicit_coercion,
del,                    true,   false,  false,  hyperdex::FUNC_FAIL,            NULL
atomic_add,             true,   false,  true,   hyperdex::FUNC_NUM_ADD,         primitive_numeric
atomic_sub,             true,   false,  true,   hyperdex::FUNC_NUM_SUB,         primitive_numeric
atomic_mul,             true,   false,  true,   hyperdex::FUNC_NUM_MUL,         primitive_numeric
atomic_div,             true,   false,  true,   hyperdex::FUNC_NUM_DIV,         primitive_numeric
atomic_mod,             true,   false,  true,   hyperdex::FUNC_NUM_MOD,         primitive_integer
atomic_and,             true,   false,  true,   hyperdex::FUNC_NUM_AND,         primitive_integer
atomic_or,              true,   false,  true,   hyperdex::FUNC_NUM_OR,          primitive_integer
atomic_xor,             true,   false,  true,   hyperdex::FUNC_NUM_XOR,         primitive_integer
string_prepend,         true,   false,  true,   hyperdex::FUNC_STRING_PREPEND,  primitive_string
string_append,          true,   false,  true,   hyperdex::FUNC_STRING_APPEND,   primitive_string
list_lpush,             true,   false,  true,   hyperdex::FUNC_LIST_LPUSH,      container_list_elem
list_rpush,             true,   false,  true,   hyperdex::FUNC_LIST_RPUSH,      container_list_elem
set_add,                true,   false,  true,   hyperdex::FUNC_SET_ADD,         container_set_elem,
set_remove,             true,   false,  true,   hyperdex::FUNC_SET_REMOVE,      container_set_elem,
set_intersect,          true,   false,  true,   hyperdex::FUNC_SET_INTERSECT,   container_set
set_union,              true,   false,  true,   hyperdex::FUNC_SET_UNION,       container_set
map_add,                true,   false,  true,   hyperdex::FUNC_MAP_ADD,         container_map
cond_map_add,           true,   false,  true,   hyperdex::FUNC_MAP_ADD,         container_map
map_remove,             true,   false,  true,   hyperdex::FUNC_MAP_REMOVE,      container_map_key_only
map_atomic_add,         true,   false,  true,   hyperdex::FUNC_NUM_ADD,         container_map_value_numeric
map_atomic_sub,         true,   false,  true,   hyperdex::FUNC_NUM_SUB,         container_map_value_numeric
map_atomic_mul,         true,   false,  true,   hyperdex::FUNC_NUM_MUL,         container_map_value_numeric
map_atomic_div,         true,   false,  true,   hyperdex::FUNC_NUM_DIV,         container_map_value_numeric
map_atomic_mod,         true,   false,  true,   hyperdex::FUNC_NUM_MOD,         container_map_value_integer
map_atomic_and,         true,   false,  true,   hyperdex::FUNC_NUM_AND,         container_map_value_integer
map_atomic_or,          true,   false,  true,   hyperdex::FUNC_NUM_OR,          container_map_value_integer
map_atomic_xor,         true,   false,  true,   hyperdex::FUNC_NUM_XOR,         container_map_value_integer
map_string_prepend,     true,   false,  true,   hyperdex::FUNC_STRING_PREPEND,  container_map_value_string
map_string_append,      true,   false,  true,   hyperdex::FUNC_STRING_APPEND,   container_map_value_string
%%
const struct hyperclient_keyop_info*
hyperclient_keyop_info_lookup(const char* str, unsigned int len)
{
    return _hyperclient_keyop_info_lookup(str, len);
}
